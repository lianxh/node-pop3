{"version":3,"sources":["../src/Command.mjs"],"names":["value","direct","then","Promise","resolve","Pop3Command","user","password","host","port","tls","timeout","tlsOptions","_PASSInfo","_socket","info","msgNumber","_connect","stream","str","list","n","Pop3Connection","stream2String","listify"],"mappings":"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","sourcesContent":["import Pop3Connection from './Connection.mjs';\n\nimport { stream2String, listify } from './helper.mjs';\n\nclass Pop3Command extends Pop3Connection {\n  constructor({\n    user,\n    password,\n    host,\n    port,\n    tls,\n    timeout,\n    tlsOptions,\n  }) {\n    super({ host, port, tls, timeout, tlsOptions});\n    this.user = user;\n    this.password = password;\n    this._PASSInfo = '';\n  }\n\n  async _connect() {\n    if (this._socket) {\n      return this._PASSInfo;\n    }\n    await super.connect();\n    await super.command('USER', this.user);\n    const [info] = await super.command('PASS', this.password);\n    this._PASSInfo = info;\n    return this._PASSInfo;\n  }\n\n  async UIDL(msgNumber = '') {\n    await this._connect();\n    const [, stream] = await super.command('UIDL', msgNumber);\n    const str = await stream2String(stream);\n    const list = listify(str);\n    return msgNumber ? list[0] : list;\n  }\n\n  async NOOP() {\n    await this._connect();\n    await super.command('NOOP');\n    return;\n  }\n\n  async LIST(msgNumber = '') {\n    await this._connect();\n    const [, stream] = await super.command('LIST', msgNumber);\n    const str = await stream2String(stream);\n    const list = listify(str);\n    return msgNumber ? list[0] : list;\n  }\n\n  async RSET() {\n    await this._connect();\n    const [info] = await super.command('RSET');\n    return info;\n  }\n\n  async RETR(msgNumber) {\n    await this._connect();\n    const [, stream] = await super.command('RETR', msgNumber);\n    return stream2String(stream);\n  }\n\n  async DELE(msgNumber) {\n    await this._connect();\n    const [info] = await super.command('DELE', msgNumber);\n    return info;\n  }\n\n  async STAT() {\n    await this._connect();\n    const [info] = await super.command('STAT');\n    return info;\n  }\n\n  async TOP(msgNumber, n = 0) {\n    await this._connect();\n    const [, stream] = await super.command('TOP', msgNumber, n);\n    return stream2String(stream);\n  }\n\n  async QUIT() {\n    if (!this._socket) {\n      this._PASSInfo = '' || 'Bye';\n      return this._PASSInfo;\n    }\n    const [info] = await super.command('QUIT');\n    this._PASSInfo = info || '';\n    return this._PASSInfo;\n  }\n}\n\nPop3Command.stream2String = stream2String;\nPop3Command.listify = listify;\n\nexport default Pop3Command;\n"],"file":"Command.js"}